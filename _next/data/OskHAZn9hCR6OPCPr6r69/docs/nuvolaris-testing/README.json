{"pageProps":{"content":"<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing,\n  ~ software distributed under the License is distributed on an\n  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  ~ KIND, either express or implied.  See the License for the\n  ~ specific language governing permissions and limitations\n  ~ under the License.\n  ~\n-->\n# nuvolaris-testing\n\nThis repo includes our test suite and the scripts to build our test environments.\n\nYou can discuss it in the #[nuvolaris-testing](https://discord.gg/sgXqn9we) discord channel and in the forum under the category [testing](https://github.com/nuvolaris/nuvolaris/discussions/categories/testing).\n\n\nCheck [this developer guide](DEVEL.md) for informations how to improve it.\n\n\n# How to build a test cluster in a physical server running Kubernetes\n\nSteps to follow, see below for an example:\n\nGet a remote server running Ubuntu 20.04, say `test.server` You need at least 64gb of memory and 8 cores. \n\n1. Change to `ansible` and generate a ssh keypair in `inventory/id_rsa`  \n2. Copy the public and private key to access the server without password\n3. Generate a configuration running ./config.py, see below for the parameters\n4. run `./play.sh <cluster>`\n5. access to the server with Kubernetes in it with `kubectl --kubeconfig kubeconfig`\n\n\n## Advanced use\n\nNote that full syntax is  `./play.sh <cluster> [<tag> [<script>]]`\n\nSo you can select a tag and execute only a part of the script select by `<tag>` (not documented here).\n\nAlso you can use alternative scripts.\n\n## Configuration examples\n\n# KVM with Microk8s\n\nSyntax \n\n`./config.py kwm <name> <kube-type> <server-hostname> <priv_key-file> <pub_key-file> <node-count> <disk-size-in-gb> <mem-size-in-gb> <num-of-vcpu>`\n\n`<kube-type>` can be `microk8s` or `okd`\n\nExample:\n\n```\n# 1 generate keys\ncd ansible\nssh-keygen -f inventory/id_rsa\n# 2 copy to the test server (change test.server with your own)\nssh-copy-id -i inventory/id_rsa root@test.server\n# 3 generate a config names m8s with 4 nodes 20gb disk 8gb memory and 2 vcpu each\n./config.py m8s kvm microk8s magrathea.academy inventory/id_rsa inventory/id_rsa.pub 4 20 8 1\n# 4 install everything\n./play.sh m8s\n# 5 check everything works\nkubectl --kubeconfig kubeconfig/m8s/kubeconfig get nodes\n```\n\nTODO: add other kinds of kubernetes: k3s, kubeadm etc\n\n# AWS\n\n```\n./config.py eks aws <key> <secret>  <region> <vm-type> <node-count> <disk-size>\n```\n\nExample:\n\n```\n/config.py eks aws AAAAAAAAAAAA abcdefghilmnopqrstuwwxyz\n#./play.sh eks\n```\n\n# Azure\n\n**Pre-requisites**\n\nCreate a service pricipal as explained [here](https://docs.microsoft.com/en-us/azure/developer/ansible/create-ansible-service-principal?tabs=azure-cli).\nTake note of the *password* field in the output.\n\nGet your *subscription_id*, *tenant* and *client_id* running these commands:\n\n```\naz account show --query '{tenantId:tenantId,subscriptionid:id}'\naz ad sp list --display-name ansible --query '{clientId:[0].appId}'\n```\nCreate the cluster configuration and run the installation playbook, example:\n\n```\n./config.py aks azure <subscription> <tenant> <client id> <secret> northeurope DS2v2 2 50\n./play.sh aks\n```\n\n**NOTE** The cluster name must contain letters, numbers and hyphens only.\n\nNow you can control your cluster using:\n\n```\n./kc.sh aks <kubectl sub command>\n```\nExample:\n\n```\n./kc.sh aks get nodes\n```\n\n\n# How to destroy the cluster\n\nSelect the corresponding cleaninig script with the cluster configuration and select the tag clean.\n\n- KVM: `./play.sh clean`\n- AWS: `./play.sh clean`\n","slug":"nuvolaris-testing","markdown":"README"},"__N_SSG":true}